{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/SignupForm.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","values","console","log","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","resData","restId","menuData","value","onSelect","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","SignupForm","displayModal","handleCancel","signupOnClick","this","visible","onCancel","destroyOnClose","preserve","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","footer","justifyContent","totalPrice","toFixed","marginRight","disabled","orderItemList","length","Meta","menuItem","description","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.009626f4.chunk.js","sourcesContent":["// login api\r\nexport const login = (credential) => {\r\n    // credential: { username: value, password: value }\r\n    // data communication fond-end and back-endï¼š method ?, url ?, data ?\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n\r\n    return (fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\");\r\n        }\r\n    })\r\n    )\r\n}\r\n// fetch restaurants data\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// fetch cart data from the server\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// inform server to do checkout\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n\r\n// fetch restaurants data\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// register API\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport { Form, Input, message, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { login } from \"../utils\";\r\n\r\n\r\nclass LoginForm extends Component {\r\n\r\n    state = {\r\n        loading: false\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n\r\n        login(values)\r\n            .then(() => {\r\n                message.success(`Login Successful`);\r\n                this.props.onSuccess();\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                style={{\r\n                    width: 300,\r\n                    margin: \"auto\",\r\n                }}\r\n                onFinish={this.onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Username!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined  />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Password!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={<LockOutlined  />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading} >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        );\r\n    }\r\n};\r\n\r\nexport default LoginForm;","import React, {useState, useEffect } from \"react\";\r\nimport {Select, List, Card, message, Tooltip, Button} from \"antd\";\r\nimport { getRestaurants, getMenus, addItemToCart } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ( { itemId } ) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const addToCart = () => {\r\n        // step1: set loading -> true\r\n        // step2: add item to the server\r\n        // step2.1: case1: success\r\n        //          case2: fail\r\n        //          finally set loading -> false\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then( () => {\r\n                message.success(`Successfully add item`)\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                icon={ <PlusOutlined /> }\r\n                type=\"primary\"\r\n                loading={loading}\r\n                onClick={addToCart}\r\n            />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\n\r\nfunction FoodList(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [curRest, setCurRest ] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [foodData, setFoodData] = useState([]);\r\n\r\n\r\n    // didMount + didUpdate\r\n    useEffect( () => {\r\n        // step 1: set loading state  -> true\r\n        // step 2: fetch restaurants date from server\r\n        // step 2.1:\r\n        //  case 1: if success, setRestaurants\r\n        //  case 2: failed\r\n        //  finally -> set loading status -> false\r\n        setLoading(true);\r\n        getRestaurants()\r\n            .then( resData => {\r\n                console.log(\"res data ->\", resData);\r\n                setRestaurants(resData);\r\n            })\r\n            .catch( err => {\r\n                console.log(\"err ->\", err.message);\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }, []); // here adding 2nd parameter [] to simulate the didMount only in class-based component\r\n\r\n    // didUpdate  -> updated selected restaurant\r\n    useEffect( () => {\r\n        // step1: set loading -> true\r\n        // step2: get menu from server\r\n        // step2.1:\r\n        //  case 1: success, setState\r\n        //  case 2: failed\r\n        //     finally: set loading status -> false\r\n        if (!curRest) return;\r\n        setLoading(true);\r\n        getMenus(curRest)\r\n            .then( menuData => {\r\n                console.log('menu ->', menuData);\r\n                setFoodData(menuData);\r\n            })\r\n            .catch( err => {\r\n                console.log(err.message);\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    },[curRest])\r\n\r\n    return (\r\n        <div>\r\n            <Select value={ curRest }\r\n                    loading={ loading }\r\n                    placeholder=\"Select a restaurant\"\r\n                    style={{ width: 300 }}\r\n                    onSelect={ value => setCurRest(value)}\r\n            >\r\n                {\r\n                    restaurants.map( item => {\r\n                        return <Option key={item.id} value={item.id}>{ item.name }</Option>\r\n                    })\r\n                }\r\n            </Select>\r\n            {\r\n                curRest\r\n                &&\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n\r\n                    dataSource={foodData}\r\n                    renderItem={ item => (\r\n                        <List.Item>\r\n                            <Card title={item.name} extra={<AddToCartButton itemId={item.id}/>}>\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                { `Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default FoodList;","import React, {Component} from 'react';\r\nimport { Button, Form, Input, message, Modal } from \"antd\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from '../utils';\r\n\r\nclass SignupForm extends Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        console.log('click');\r\n        // inform server to register\r\n        signup(data)\r\n            .then( () => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch( (err) => {\r\n                message.error(err.message)\r\n            })\r\n            .finally( () => {\r\n                this.handleCancel();\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal title=\"Register\"\r\n                       visible={this.state.displayModal}\r\n                       onCancel={this.handleCancel}\r\n                       destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                </>\r\n                );\r\n    }\r\n}\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Drawer, Button, Typography, message, List } from 'antd';\r\n\r\nimport { getCart, checkout } from \"../utils.js\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction MyCart(props) {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    // set loading status\r\n    const [loading, setLoading] = useState(false);\r\n    // set cart data state\r\n    const [cartData, setCartData] = useState({});  // {} represents an empty object\r\n    // set checking loading\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onCheckOut = () => {\r\n        // step1: set checking as true\r\n        // step2: inform send checkout to server\r\n        // step3: set loading -> false\r\n        setChecking(true);\r\n        checkout()\r\n            .then( () => {\r\n                message.success(\"successfully checkout\");\r\n                setCartVisible(false);\r\n                onCloseDrawer();\r\n            })\r\n            .catch( (err) => {\r\n                message.error(err.message)\r\n            })\r\n            .finally( () => {\r\n                setChecking(false);\r\n\r\n            })\r\n    }\r\n\r\n    // fetch cart data from back-end server\r\n    useEffect( () => {\r\n        // case 1: cart is visible -> return directly\r\n        // case 2: cart is not visible\r\n        //   step 1: set loading as true\r\n        //   step 2: fetch data\r\n        //        case 1: success -> setCartData(data form the server)\r\n        //        case 2: fail -> inform user\r\n        //        case 3: finally -> set loading as false\r\n        if (!cartVisible) return;\r\n        setLoading(true);\r\n        getCart()\r\n            .then( cartData => {\r\n                console.log('cart data -> ', cartData)\r\n                setCartData(cartData);\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }, [cartVisible]);\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\"\r\n                    onClick={onOpenDrawer}\r\n                    shape=\"round\"\r\n            >\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={400}\r\n                footer={\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                       <Text>{`Total Price: $${cartData.totalPrice ? cartData.totalPrice.toFixed(2) : 0}`}</Text>\r\n                        <div>\r\n                            <Button\r\n                                style={{ marginRight: 8 }}\r\n                                onClick={onCloseDrawer}\r\n                            >Cancel</Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={onCheckOut}\r\n                                loading={checking}\r\n                                disabled={ loading || cartData.orderItemList && cartData.orderItemList.length === 0}\r\n                            >Checkout</Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    dataSource={cartData ? cartData.orderItemList : []}\r\n                    renderItem={\r\n                        item => {\r\n                            // console.log(item)\r\n                            return (\r\n                                <List.Item>\r\n                                    <List.Item.Meta\r\n                                        title={item.menuItem.name}\r\n                                        description={`$${item.price}`}\r\n                                    />\r\n                                </List.Item>\r\n                            )\r\n                        }\r\n                    }\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyCart;","import React, { useState } from \"react\";\nimport  { Layout, Typography  } from \"antd\";  // using \"import\" keyword to introduce ant design Layout\n\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport SignupForm from \"./components/SignupForm\";\nimport MyCart from \"./components/MyCart\";\n\nimport \"./App.css\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\n\nfunction App() {\nconst [ authed, setAuthed ] = useState( false );\n\n  return (\n      <Layout style={{ height: \"100vh\" }}>\n        <Header>\n          <div className=\"header\">\n            <Title\n                level={2}\n                style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n            >\n              Lai Food\n            </Title>\n              <div>\n                  { authed\n                    ?\n                    <MyCart />\n                    :\n                    <SignupForm />\n                  }\n              </div>\n          </div>\n        </Header>\n\n        <Content\n          style={{\n              padding: \"50px\",\n              maxHeight: \"calc(100% - 64px)\",\n              overflowY: \"auto\",\n          }}\n        >\n          {\n            authed\n            ? (\n            <FoodList />\n            ) : (\n            <LoginForm onSuccess = { () => setAuthed( true ) } />\n            )}\n    </Content>\n  </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n        <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}